---
- name: Generate ssh key
  ansible.builtin.user:
    name: root
    generate_ssh_key: yes
    ssh_key_bits: 2048
    ssh_key_file: .ssh/id_rsa

- name: view ssh key pub
  shell: cat /root/.ssh/id_rsa.pub
  register: ssh_key_client

- name: input ssh key client in server file
  ansible.builtin.lineinfile:
    path: /home/borg/.ssh/authorized_keys
    line: '{{ssh_key_client.stdout}}' 
  delegate_to: server

- name: Change file permissions
  ansible.builtin.file:
    path: '{{item.path}}'
    owner: borg
    group: borg
    mode: '{{item.mode}}'
  loop:
    - path: /home/borg/.ssh
      mode: 700
    - path: /home/borg/.ssh/authorized_keys
      mode: 600
  delegate_to: server

- name: Copy etc/systemd/system
  ansible.builtin.copy:
    src: '{{item}}'
    dest: /etc/systemd/system
    owner: root
    group: root
    mode: 755
  loop:
    - borg-backup.timer
    - borg-backup.service

- name: start service borg-backup.timer
  ansible.builtin.systemd:
    state: started
    enabled: true
    daemon_reload: true
    name: borg-backup.timer

- name: Change file permissions
  ansible.builtin.file:
    path: /var/backup
    owner: borg
    group: borg
  delegate_to: server




- name: Initializing the borg repository
  ansible.builtin.shell: |
   spawn borg init --encryption=repokey borg@192.168.56.160:/var/backup/etc

    expect "Are you sure you want to continue connecting (yes/no):"
    send "yes\n"

    expect "Enter new passphrase:"
    send "Otus1234\n"

    expect "Enter same passphrase again:"
    send "Otus1234\n"

    expect "Do you want your passphrase to be displayed for verification? [yN]:"
    send "y\n"
  args:
    executable: /usr/bin/expect






